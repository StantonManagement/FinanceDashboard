import React, { useState, useEffect } from 'react';

const PropertyDashboard = () => {
  // State management
  const [selectedPortfolio, setSelectedPortfolio] = useState('hartford1');
  const [activeTab, setActiveTab] = useState('performance');
  const [cellNotes, setCellNotes] = useState({});
  const [actionItems, setActionItems] = useState([]);
  const [clickedElement, setClickedElement] = useState(null);

  // Sample Hartford 1 data
  const hartford1Data = {
    "S0010": {
      propertyName: "228 Maple",
      portfolio: "Hartford 1",
      units: 6,
      marketRent: 12600,
      sqft: 8320,
      currentRevenue: 10500,
      currentExpenses: 3700,
      currentNOI: 6800,
      noiMargin: 64.8,
      t12NOI: 81600,
      capRate: 12.2,
      dscr: 2.15,
      occupancy: 94.5,
      glAccounts: {
        "4105": { description: "Rent Income", amount: 10200, type: "revenue" },
        "4110": { description: "Section 8 Rent", amount: 300, type: "revenue" },
        "6105": { description: "Property Management", amount: 630, type: "expense" },
        "6110": { description: "Maintenance & Repairs", amount: 1850, type: "expense" },
        "6120": { description: "Utilities", amount: 420, type: "expense" },
        "6130": { description: "Property Insurance", amount: 285, type: "expense" },
        "6140": { description: "Property Taxes", amount: 815, type: "expense" }
      }
    }
  };

  const portfolios = {
    all: { name: "Consolidated", units: 109, noi: 985000, cap: 9.6 },
    southend: { name: "South End", units: 51, noi: 450000, cap: 12.1 },
    northend: { name: "North End", units: 40, noi: 385000, cap: 11.8 },
    "90park": { name: "90 Park", units: 12, noi: 125000, cap: 8.9 },
    hartford1: { name: "Hartford 1", units: 6, noi: 85000, cap: 12.2 }
  };

  // Click highlighting function
  const handleClick = (elementId) => {
    setClickedElement(elementId);
    setTimeout(() => setClickedElement(null), 5000);
  };

  // Note management
  const addNote = (cellId, note) => {
    setCellNotes(prev => ({
      ...prev,
      [cellId]: {
        text: note,
        timestamp: new Date().toISOString(),
        author: "User"
      }
    }));
  };

  // Action item management
  const addActionItem = (description, priority = "MEDIUM") => {
    const newItem = {
      id: `AI-${Date.now()}`,
      description,
      property: "S0010",
      priority,
      status: "OPEN",
      createdAt: new Date().toISOString()
    };
    setActionItems(prev => [...prev, newItem]);
  };

  // Export functions
  const exportToExcel = () => {
    alert('Exporting to Excel with all notes and action items...');
    console.log('Notes:', cellNotes);
    console.log('Action Items:', actionItems);
  };

  const exportLenderPackage = () => {
    alert('Generating lender package for Hartford 1 portfolio...');
  };

  const refreshData = () => {
    alert('Refreshing API data from >> sheets...');
  };

  return (
    <div style={{ fontFamily: 'Segoe UI, Arial, sans-serif', fontSize: '16px', backgroundColor: '#ffffff' }}>
      {/* Header */}
      <div style={{ 
        background: '#f8f9fa', 
        borderBottom: '3px solid #000000', 
        padding: '16px 0' 
      }}>
        <div style={{ 
          maxWidth: '1800px', 
          margin: '0 auto', 
          padding: '0 20px', 
          display: 'flex', 
          justifyContent: 'space-between', 
          alignItems: 'center' 
        }}>
          <div>
            <div style={{ 
              fontSize: '20px', 
              fontWeight: '700', 
              color: '#000000', 
              textTransform: 'uppercase', 
              letterSpacing: '1px' 
            }}>
              Stanton Management LLC
            </div>
            <div style={{ 
              fontSize: '12px', 
              color: '#333333', 
              textTransform: 'uppercase', 
              marginTop: '2px' 
            }}>
              Financial Analysis & Reporting Dashboard
            </div>
          </div>
          <div style={{ display: 'flex', gap: '12px' }}>
            <button 
              onClick={exportLenderPackage}
              style={{ 
                background: '#000000', 
                color: '#ffffff', 
                border: 'none', 
                padding: '8px 16px', 
                fontSize: '10px', 
                textTransform: 'uppercase', 
                fontWeight: '700', 
                cursor: 'pointer' 
              }}
            >
              LENDER PACKAGE
            </button>
            <button 
              onClick={exportToExcel}
              style={{ 
                background: '#ffffff', 
                color: '#000000', 
                border: '2px solid #000000', 
                padding: '8px 16px', 
                fontSize: '10px', 
                textTransform: 'uppercase', 
                fontWeight: '700', 
                cursor: 'pointer' 
              }}
            >
              EXPORT EXCEL
            </button>
          </div>
        </div>
      </div>

      <div style={{ maxWidth: '1800px', margin: '0 auto', padding: '20px' }}>
        {/* Portfolio Navigation */}
        <div style={{ 
          background: '#ffffff', 
          border: '2px solid #000000', 
          marginBottom: '20px' 
        }}>
          <div style={{ 
            background: '#000000', 
            color: '#ffffff', 
            padding: '12px 20px', 
            fontWeight: '700', 
            fontSize: '12px', 
            textTransform: 'uppercase' 
          }}>
            Portfolio Selection
          </div>
          <div style={{ 
            display: 'grid', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))' 
          }}>
            {Object.entries(portfolios).map(([key, portfolio]) => (
              <button
                key={key}
                onClick={() => {
                  setSelectedPortfolio(key);
                  handleClick(`portfolio-${key}`);
                }}
                style={{
                  background: selectedPortfolio === key ? '#e6f3ff' : '#ffffff',
                  border: 'none',
                  borderRight: '1px solid #cccccc',
                  borderBottom: '1px solid #cccccc',
                  borderLeft: selectedPortfolio === key ? '4px solid #0066cc' : 'none',
                  padding: '16px 20px',
                  cursor: 'pointer',
                  textAlign: 'left',
                  transform: clickedElement === `portfolio-${key}` ? 'scale(1.02)' : 'scale(1)',
                  backgroundColor: clickedElement === `portfolio-${key}` ? '#ffeb3b' : 
                    (selectedPortfolio === key ? '#e6f3ff' : '#ffffff'),
                  transition: 'all 0.1s'
                }}
              >
                <div style={{ 
                  fontWeight: '700', 
                  fontSize: '14px', 
                  color: '#000000', 
                  marginBottom: '6px', 
                  textTransform: 'uppercase' 
                }}>
                  {portfolio.name}
                </div>
                <div style={{ 
                  fontSize: '12px', 
                  color: '#666666', 
                  display: 'grid', 
                  gridTemplateColumns: '1fr 1fr 1fr', 
                  gap: '8px' 
                }}>
                  <span>{portfolio.units} Units</span>
                  <span>${Math.round(portfolio.noi/1000)}K NOI</span>
                  <span>{portfolio.cap}% Cap</span>
                </div>
              </button>
            ))}
          </div>
        </div>

        {/* KPI Section - Only show Hartford 1 data when selected */}
        {selectedPortfolio === 'hartford1' && (
          <div style={{ 
            background: '#f8f9fa', 
            border: '2px solid #000000', 
            marginBottom: '20px', 
            padding: '20px' 
          }}>
            <div style={{ 
              fontSize: '14px', 
              fontWeight: '700', 
              textTransform: 'uppercase', 
              color: '#000000', 
              marginBottom: '16px' 
            }}>
              Hartford 1 Portfolio Metrics
            </div>
            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', 
              gap: '1px', 
              background: '#cccccc' 
            }}>
              {[
                { label: "Monthly NOI", value: "$6,800", change: "+8.2% MoM" },
                { label: "NOI Margin", value: "64.8%", change: "+2.1pp YoY" },
                { label: "Occupancy", value: "94.5%", change: "+1.2pp MoM" },
                { label: "Revenue/Unit", value: "$1,750", change: "+3.8% MoM" },
                { label: "Cap Rate", value: "12.2%", change: "Above Market" },
                { label: "DSCR", value: "2.15x", change: "Strong" }
              ].map((kpi, index) => (
                <div
                  key={index}
                  onClick={() => handleClick(`kpi-${index}`)}
                  style={{
                    background: clickedElement === `kpi-${index}` ? '#ffeb3b' : '#ffffff',
                    padding: '16px',
                    textAlign: 'center',
                    cursor: 'pointer',
                    transform: clickedElement === `kpi-${index}` ? 'scale(1.05)' : 'scale(1)',
                    transition: 'all 0.1s'
                  }}
                >
                  <div style={{ 
                    fontSize: '10px', 
                    textTransform: 'uppercase', 
                    color: '#666666', 
                    marginBottom: '8px', 
                    fontWeight: '700' 
                  }}>
                    {kpi.label}
                  </div>
                  <div style={{ 
                    fontSize: '22px', 
                    fontWeight: '700', 
                    color: '#000000', 
                    marginBottom: '4px', 
                    fontFamily: 'Courier New, monospace' 
                  }}>
                    {kpi.value}
                  </div>
                  <div style={{ 
                    fontSize: '11px', 
                    fontWeight: '700', 
                    color: '#006600' 
                  }}>
                    {kpi.change}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Tab Navigation */}
        <div style={{ 
          background: '#ffffff', 
          border: '2px solid #000000', 
          marginBottom: '20px' 
        }}>
          <div style={{ 
            display: 'flex', 
            background: '#f8f9fa', 
            borderBottom: '1px solid #cccccc' 
          }}>
            {[
              { key: 'performance', label: 'Performance Analysis' },
              { key: 'operations', label: 'Operational Review' },
              { key: 'cashflow', label: 'Cash Flow Detail' },
              { key: 'notes', label: 'Notes & Actions' }
            ].map(tab => (
              <button
                key={tab.key}
                onClick={() => {
                  setActiveTab(tab.key);
                  handleClick(`tab-${tab.key}`);
                }}
                style={{
                  flex: 1,
                  background: activeTab === tab.key ? '#000000' : 'transparent',
                  color: activeTab === tab.key ? '#ffffff' : '#333333',
                  border: 'none',
                  borderRight: '1px solid #cccccc',
                  padding: '16px 20px',
                  fontWeight: '700',
                  fontSize: '12px',
                  textTransform: 'uppercase',
                  cursor: 'pointer',
                  transform: clickedElement === `tab-${tab.key}` ? 'scale(1.02)' : 'scale(1)',
                  backgroundColor: clickedElement === `tab-${tab.key}` ? '#ffeb3b' : 
                    (activeTab === tab.key ? '#000000' : 'transparent'),
                  transition: 'all 0.1s'
                }}
              >
                {tab.label}
              </button>
            ))}
          </div>

          {/* Tab Content */}
          <div style={{ padding: '20px' }}>
            {/* Performance Tab */}
            {activeTab === 'performance' && selectedPortfolio === 'hartford1' && (
              <div>
                <table style={{ 
                  width: '100%', 
                  borderCollapse: 'collapse', 
                  background: '#ffffff', 
                  border: '2px solid #000000', 
                  fontSize: '14px' 
                }}>
                  <thead>
                    <tr>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Property ID</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Property Name</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Units</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Revenue</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>NOI</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Margin</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Actions</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td 
                        onClick={() => handleClick('cell-s0010')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          fontFamily: 'Courier New, monospace',
                          fontWeight: '700',
                          background: clickedElement === 'cell-s0010' ? '#ffeb3b' : '#ffffff',
                          transform: clickedElement === 'cell-s0010' ? 'scale(1.02)' : 'scale(1)',
                          transition: 'all 0.1s'
                        }}
                      >
                        S0010
                      </td>
                      <td 
                        onClick={() => handleClick('cell-name')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'left', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          fontWeight: '700',
                          background: clickedElement === 'cell-name' ? '#ffeb3b' : '#ffffff',
                          transform: clickedElement === 'cell-name' ? 'scale(1.02)' : 'scale(1)',
                          transition: 'all 0.1s'
                        }}
                      >
                        228 Maple
                      </td>
                      <td 
                        onClick={() => handleClick('cell-units')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          background: clickedElement === 'cell-units' ? '#ffeb3b' : '#ffffff',
                          transform: clickedElement === 'cell-units' ? 'scale(1.02)' : 'scale(1)',
                          transition: 'all 0.1s'
                        }}
                      >
                        6
                      </td>
                      <td 
                        onClick={() => handleClick('cell-revenue')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          background: clickedElement === 'cell-revenue' ? '#ffeb3b' : (cellNotes['cell-revenue'] ? '#fff9c4' : '#ffffff'),
                          transform: clickedElement === 'cell-revenue' ? 'scale(1.02)' : 'scale(1)',
                          transition: 'all 0.1s',
                          fontFamily: 'Courier New, monospace'
                        }}
                      >
                        $10,500
                        {cellNotes['cell-revenue'] && <span style={{ fontSize: '10px', color: '#ff6600', marginLeft: '4px' }}>📝</span>}
                      </td>
                      <td 
                        onClick={() => handleClick('cell-noi')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          background: clickedElement === 'cell-noi' ? '#ffeb3b' : '#ffffff',
                          transform: clickedElement === 'cell-noi' ? 'scale(1.02)' : 'scale(1)',
                          transition: 'all 0.1s',
                          fontFamily: 'Courier New, monospace',
                          color: '#006600'
                        }}
                      >
                        $6,800
                      </td>
                      <td 
                        onClick={() => handleClick('cell-margin')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          background: clickedElement === 'cell-margin' ? '#ffeb3b' : '#ffffff',
                          transform: clickedElement === 'cell-margin' ? 'scale(1.02)' : 'scale(1)',
                          transition: 'all 0.1s',
                          fontFamily: 'Courier New, monospace',
                          color: '#006600'
                        }}
                      >
                        64.8%
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc' }}>
                        <button 
                          onClick={() => {
                            handleClick('btn-gl-detail');
                            alert('Opening GL Account Detail for S0010...');
                          }}
                          style={{ 
                            background: '#000000', 
                            color: '#ffffff', 
                            border: 'none', 
                            padding: '6px 12px', 
                            fontSize: '10px', 
                            textTransform: 'uppercase', 
                            cursor: 'pointer',
                            transform: clickedElement === 'btn-gl-detail' ? 'scale(1.05)' : 'scale(1)',
                            backgroundColor: clickedElement === 'btn-gl-detail' ? '#ffeb3b' : '#000000',
                            color: clickedElement === 'btn-gl-detail' ? '#000000' : '#ffffff',
                            transition: 'all 0.1s'
                          }}
                        >
                          VIEW GL DETAIL
                        </button>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            )}

            {/* Operations Tab */}
            {activeTab === 'operations' && selectedPortfolio === 'hartford1' && (
              <div>
                <div style={{ 
                  background: '#e6f3ff', 
                  border: '2px solid #0066cc', 
                  padding: '12px', 
                  marginBottom: '20px', 
                  fontWeight: '700', 
                  color: '#0066cc', 
                  textTransform: 'uppercase', 
                  fontSize: '12px' 
                }}>
                  S0010 - OPERATIONAL PERFORMANCE WITHIN NORMAL RANGES
                </div>

                <table style={{ 
                  width: '100%', 
                  borderCollapse: 'collapse', 
                  background: '#ffffff', 
                  border: '2px solid #000000', 
                  fontSize: '14px' 
                }}>
                  <thead>
                    <tr>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Expense Category</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Amount</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Per Unit</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Portfolio Avg</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Variance</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Status</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td 
                        onClick={() => handleClick('exp-utilities')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'left', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          fontWeight: '600',
                          background: clickedElement === 'exp-utilities' ? '#ffeb3b' : '#ffffff',
                          transition: 'all 0.1s'
                        }}
                      >
                        Water & Sewer
                      </td>
                      <td 
                        onClick={() => handleClick('exp-utilities-amt')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          fontFamily: 'Courier New, monospace',
                          background: clickedElement === 'exp-utilities-amt' ? '#ffeb3b' : '#ffffff',
                          transition: 'all 0.1s'
                        }}
                      >
                        $420
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', fontFamily: 'Courier New, monospace' }}>
                        $70.00
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', fontFamily: 'Courier New, monospace' }}>
                        $85.20
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', color: '#006600', fontWeight: '700' }}>
                        -17.8%
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', color: '#006600', fontWeight: '700' }}>
                        EXCELLENT
                      </td>
                    </tr>
                    <tr>
                      <td 
                        onClick={() => handleClick('exp-maintenance')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'left', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          fontWeight: '600',
                          background: clickedElement === 'exp-maintenance' ? '#ffeb3b' : '#ffffff',
                          transition: 'all 0.1s'
                        }}
                      >
                        Maintenance & Repairs
                      </td>
                      <td 
                        onClick={() => handleClick('exp-maintenance-amt')}
                        style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc', 
                          cursor: 'pointer',
                          fontFamily: 'Courier New, monospace',
                          background: clickedElement === 'exp-maintenance-amt' ? '#ffeb3b' : '#ffffff',
                          transition: 'all 0.1s'
                        }}
                      >
                        $1,850
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', fontFamily: 'Courier New, monospace' }}>
                        $308.33
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', fontFamily: 'Courier New, monospace' }}>
                        $225.50
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', color: '#cc6600', fontWeight: '700' }}>
                        +36.7%
                      </td>
                      <td style={{ padding: '12px 8px', textAlign: 'center', borderBottom: '1px solid #cccccc', color: '#cc6600', fontWeight: '700' }}>
                        MONITOR
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            )}

            {/* Cash Flow Tab */}
            {activeTab === 'cashflow' && selectedPortfolio === 'hartford1' && (
              <div>
                <table style={{ 
                  width: '100%', 
                  borderCollapse: 'collapse', 
                  background: '#ffffff', 
                  border: '2px solid #000000', 
                  fontSize: '14px' 
                }}>
                  <thead>
                    <tr>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>GL Account</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Description</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Amount</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Notes</th>
                      <th style={{ 
                        background: '#000000', 
                        color: '#ffffff', 
                        padding: '12px 8px', 
                        textAlign: 'center', 
                        fontWeight: '700', 
                        fontSize: '12px', 
                        textTransform: 'uppercase' 
                      }}>Actions</th>
                    </tr>
                  </thead>
                  <tbody>
                    {Object.entries(hartford1Data.S0010.glAccounts).map(([glCode, account]) => (
                      <tr key={glCode}>
                        <td 
                          onClick={() => handleClick(`gl-${glCode}`)}
                          style={{ 
                            padding: '12px 8px', 
                            textAlign: 'center', 
                            borderBottom: '1px solid #cccccc', 
                            cursor: 'pointer',
                            fontFamily: 'Courier New, monospace',
                            fontWeight: '700',
                            background: clickedElement === `gl-${glCode}` ? '#ffeb3b' : '#ffffff',
                            transition: 'all 0.1s'
                          }}
                        >
                          {glCode}
                        </td>
                        <td 
                          onClick={() => handleClick(`desc-${glCode}`)}
                          style={{ 
                            padding: '12px 8px', 
                            textAlign: 'left', 
                            borderBottom: '1px solid #cccccc', 
                            cursor: 'pointer',
                            background: clickedElement === `desc-${glCode}` ? '#ffeb3b' : '#ffffff',
                            transition: 'all 0.1s'
                          }}
                        >
                          {account.description}
                        </td>
                        <td 
                          onClick={() => handleClick(`amt-${glCode}`)}
                          style={{ 
                            padding: '12px 8px', 
                            textAlign: 'center', 
                            borderBottom: '1px solid #cccccc', 
                            cursor: 'pointer',
                            fontFamily: 'Courier New, monospace',
                            color: account.type === 'revenue' ? '#006600' : '#cc0000',
                            background: clickedElement === `amt-${glCode}` ? '#ffeb3b' : (cellNotes[`amt-${glCode}`] ? '#fff9c4' : '#ffffff'),
                            transition: 'all 0.1s'
                          }}
                        >
                          {account.type === 'revenue' ? '+' : '-'}${account.amount}
                          {cellNotes[`amt-${glCode}`] && <span style={{ fontSize: '10px', color: '#ff6600', marginLeft: '4px' }}>📝</span>}
                        </td>
                        <td style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc' 
                        }}>
                          <input
                            type="text"
                            placeholder="Add note..."
                            onBlur={(e) => {
                              if (e.target.value.trim()) {
                                addNote(`amt-${glCode}`, e.target.value);
                                e.target.value = '';
                              }
                            }}
                            style={{
                              border: '1px solid #cccccc',
                              padding: '4px 8px',
                              fontSize: '12px',
                              width: '150px'
                            }}
                          />
                        </td>
                        <td style={{ 
                          padding: '12px 8px', 
                          textAlign: 'center', 
                          borderBottom: '1px solid #cccccc' 
                        }}>
                          <button 
                            onClick={() => {
                              handleClick(`action-${glCode}`);
                              addActionItem(`Review GL account ${glCode} - ${account.description}`, "MEDIUM");
                            }}
                            style={{ 
                              background: '#ffffff', 
                              color: '#000000', 
                              border: '1px solid #000000', 
                              padding: '4px 8px', 
                              fontSize: '10px', 
                              textTransform: 'uppercase', 
                              cursor: 'pointer',
                              transform: clickedElement === `action-${glCode}` ? 'scale(1.05)' : 'scale(1)',
                              backgroundColor: clickedElement === `action-${glCode}` ? '#ffeb3b' : '#ffffff',
                              transition: 'all 0.1s'
                            }}
                          >
                            FLAG
                          </button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}

            {/* Notes & Actions Tab */}
            {activeTab === 'notes' && (
              <div>
                <div style={{ marginBottom: '20px' }}>
                  <div style={{ 
                    fontSize: '16px', 
                    fontWeight: '700', 
                    marginBottom: '12px', 
                    textTransform: 'uppercase' 
                  }}>
                    Cell Notes
                  </div>
                  {Object.keys(cellNotes).length === 0 ? (
                    <div style={{ 
                      padding: '20px', 
                      background: '#f8f9fa', 
                      border: '1px solid #cccccc', 
                      fontStyle: 'italic', 
                      color: '#666666' 
                    }}>
                      No notes added yet. Click on any data cell and add a note to track issues.
                    </div>
                  ) : (
                    <div style={{ 
                      background: '#ffffff', 
                      border: '2px solid #000000' 
                    }}>
                      {Object.entries(cellNotes).map(([cellId, note]) => (
                        <div key={cellId} style={{ 
                          padding: '12px', 
                          borderBottom: '1px solid #cccccc', 
                          display: 'flex', 
                          justifyContent: 'space-between', 
                          alignItems: 'center' 
                        }}>
                          <div>
                            <div style={{ fontWeight: '700', fontSize: '12px', color: '#0066cc' }}>
                              {cellId.toUpperCase()}
                            </div>
                            <div style={{ marginTop: '4px' }}>
                              {note.text}
                            </div>
                            <div style={{ fontSize: '10px', color: '#666666', marginTop: '4px' }}>
                              {note.author} - {new Date(note.timestamp).toLocaleString()}
                            </div>
                          </div>
                          <button 
                            onClick={() => {
                              const newNotes = { ...cellNotes };
                              delete newNotes[cellId];
                              setCellNotes(newNotes);
                            }}
                            style={{ 
                              background: '#cc0000', 
                              color: '#ffffff', 
                              border: 'none', 
                              padding: '4px 8px', 
                              fontSize: '10px', 
                              cursor: 'pointer' 
                            }}
                          >
                            REMOVE
                          </button>
                        </div>
                      ))}
                    </div>
                  )}
                </div>

                <div>
                  <div style={{ 
                    fontSize: '16px', 
                    fontWeight: '700', 
                    marginBottom: '12px', 
                    textTransform: 'uppercase' 
                  }}>
                    Action Items ({actionItems.length})
                  </div>
                  {actionItems.length === 0 ? (
                    <div style={{ 
                      padding: '20px', 
                      background: '#f8f9fa', 
                      border: '1px solid #cccccc', 
                      fontStyle: 'italic', 
                      color: '#666666' 
                    }}>
                      No action items created yet. Use the FLAG buttons to create action items for the accounting team.
                    </div>
                  ) : (
                    <div style={{ 
                      background: '#ffffff', 
                      border: '2px solid #000000' 
                    }}>
                      {actionItems.map(item => (
                        <div key={item.id} style={{ 
                          padding: '12px', 
                          borderBottom: '1px solid #cccccc', 
                          display: 'flex', 
                          justifyContent: 'space-between', 
                          alignItems: 'center' 
                        }}>
                          <div>
                            <div style={{ 
                              fontSize: '12px', 
                              color: item.priority === 'HIGH' ? '#cc0000' : item.priority === 'MEDIUM' ? '#cc6600' : '#666666',
                              fontWeight: '700' 
                            }}>
                              {item.priority} PRIORITY
                            </div>
                            <div style={{ marginTop: '4px', fontWeight: '600' }}>
                              {item.description}
                            </div>
                            <div style={{ fontSize: '10px', color: '#666666', marginTop: '4px' }}>
                              {item.property} - Created {new Date(item.createdAt).toLocaleDateString()}
                            </div>
                          </div>
                          <div style={{ display: 'flex', gap: '8px' }}>
                            <select 
                              value={item.status}
                              onChange={(e) => {
                                const updatedItems = actionItems.map(ai => 
                                  ai.id === item.id ? { ...ai, status: e.target.value } : ai
                                );
                                setActionItems(updatedItems);
                              }}
                              style={{ 
                                padding: '4px', 
                                fontSize: '10px', 
                                border: '1px solid #cccccc' 
                              }}
                            >
                              <option value="OPEN">OPEN</option>
                              <option value="IN_PROGRESS">IN PROGRESS</option>
                              <option value="COMPLETED">COMPLETED</option>
                            </select>
                            <button 
                              onClick={() => {
                                const updatedItems = actionItems.filter(ai => ai.id !== item.id);
                                setActionItems(updatedItems);
                              }}
                              style={{ 
                                background: '#cc0000', 
                                color: '#ffffff', 
                                border: 'none', 
                                padding: '4px 8px', 
                                fontSize: '10px', 
                                cursor: 'pointer' 
                              }}
                            >
                              DELETE
                            </button>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            )}

            {/* Show message for other portfolios */}
            {selectedPortfolio !== 'hartford1' && (
              <div style={{ 
                padding: '40px', 
                textAlign: 'center', 
                background: '#f8f9fa', 
                border: '2px solid #cccccc' 
              }}>
                <div style={{ 
                  fontSize: '18px', 
                  fontWeight: '700', 
                  marginBottom: '12px', 
                  textTransform: 'uppercase' 
                }}>
                  {portfolios[selectedPortfolio]?.name} Portfolio
                </div>
                <div style={{ 
                  fontSize: '14px', 
                  color: '#666666', 
                  marginBottom: '20px' 
                }}>
                  Full implementation coming soon. Currently showing Hartford 1 as working example.
                </div>
                <button 
                  onClick={() => setSelectedPortfolio('hartford1')}
                  style={{ 
                    background: '#000000', 
                    color: '#ffffff', 
                    border: 'none', 
                    padding: '12px 24px', 
                    fontSize: '12px', 
                    textTransform: 'uppercase', 
                    fontWeight: '700', 
                    cursor: 'pointer' 
                  }}
                >
                  View Hartford 1 (Working Example)
                </button>
              </div>
            )}
          </div>

          {/* Export Controls */}
          <div style={{ 
            background: '#f8f9fa', 
            borderTop: '2px solid #000000', 
            padding: '16px 20px', 
            display: 'flex', 
            justifyContent: 'space-between', 
            alignItems: 'center' 
          }}>
            <div style={{ display: 'flex', gap: '12px', alignItems: 'center' }}>
              <button 
                onClick={() => {
                  handleClick('export-excel');
                  exportToExcel();
                }}
                style={{ 
                  padding: '8px 16px', 
                  border: '2px solid #000000', 
                  background: '#ffffff', 
                  color: '#000000', 
                  fontSize: '10px', 
                  fontWeight: '700', 
                  textTransform: 'uppercase', 
                  cursor: 'pointer',
                  transform: clickedElement === 'export-excel' ? 'scale(1.05)' : 'scale(1)',
                  backgroundColor: clickedElement === 'export-excel' ? '#ffeb3b' : '#ffffff',
                  transition: 'all 0.1s'
                }}
              >
                EXPORT TO EXCEL
              </button>
              <button 
                onClick={() => {
                  handleClick('add-note');
                  const note = prompt('Add portfolio note:');
                  if (note) {
                    addNote('portfolio-note', note);
                  }
                }}
                style={{ 
                  padding: '8px 16px', 
                  border: '2px solid #000000', 
                  background: '#ffffff', 
                  color: '#000000', 
                  fontSize: '10px', 
                  fontWeight: '700', 
                  textTransform: 'uppercase', 
                  cursor: 'pointer',
                  transform: clickedElement === 'add-note' ? 'scale(1.05)' : 'scale(1)',
                  backgroundColor: clickedElement === 'add-note' ? '#ffeb3b' : '#ffffff',
                  transition: 'all 0.1s'
                }}
              >
                ADD PORTFOLIO NOTE
              </button>
            </div>
            <div style={{ display: 'flex', gap: '12px', alignItems: 'center' }}>
              <button 
                onClick={() => {
                  handleClick('refresh-data');
                  refreshData();
                }}
                style={{ 
                  background: '#000000', 
                  color: '#ffffff', 
                  border: 'none', 
                  padding: '8px 16px', 
                  fontSize: '10px', 
                  fontWeight: '700', 
                  textTransform: 'uppercase', 
                  cursor: 'pointer',
                  transform: clickedElement === 'refresh-data' ? 'scale(1.05)' : 'scale(1)',
                  backgroundColor: clickedElement === 'refresh-data' ? '#ffeb3b' : '#000000',
                  color: clickedElement === 'refresh-data' ? '#000000' : '#ffffff',
                  transition: 'all 0.1s'
                }}
              >
                REFRESH API DATA
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PropertyDashboard;